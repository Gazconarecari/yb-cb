{"ast":null,"code":"var _jsxFileName = \"/Users/guillermoazcona/Desktop/yb-cb/src/pages/Proximamente.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { supabase } from '../supabaseClient';\nimport './Proximamente.css'; // Importar el archivo de estilos\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Proximamente() {\n  _s();\n  const [convocatorias, setConvocatorias] = useState([]);\n  useEffect(() => {\n    async function fetchConvocatorias() {\n      // Llamada a la función SQL para obtener username y fecha\n      const {\n        data: convocatoriasData,\n        error\n      } = await supabase.rpc('get_proximas_convocatorias1');\n      if (error) {\n        console.log('Error obteniendo convocatorias:', error);\n        return;\n      }\n      setConvocatorias(convocatoriasData); // Guardamos los resultados en el estado\n    }\n    fetchConvocatorias();\n  }, []);\n  const isToday = date => {\n    const today = new Date();\n    return date.getDate() === today.getDate() && date.getMonth() === today.getMonth() && date.getFullYear() === today.getFullYear();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Pr\\xF3ximas Convocatorias\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: convocatorias.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no-convocatorias\",\n        children: \"No hay convocatorias pr\\xF3ximas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this) : convocatorias.map((convocatoria, index) => {\n        const convocatoriaDate = new Date(convocatoria.fecha);\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: isToday(convocatoriaDate) ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [convocatoria.username, \" cocina hoy\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 19\n          }, this) // Si es hoy\n          : convocatoriaDate >= new Date() ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [convocatoria.username, \" cocinar\\xE1 el \", convocatoriaDate.toLocaleDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 19\n          }, this) // Si es una fecha futura\n          : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [convocatoria.username, \" no tiene fecha, pero que se vaya preparando\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 19\n          }, this) // Si es una fecha pasada\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(Proximamente, \"wiKfh3vGt+mH2sxJCrJiNHDoKC4=\");\n_c = Proximamente;\nexport default Proximamente;\nvar _c;\n$RefreshReg$(_c, \"Proximamente\");","map":{"version":3,"names":["useState","useEffect","supabase","jsxDEV","_jsxDEV","Proximamente","_s","convocatorias","setConvocatorias","fetchConvocatorias","data","convocatoriasData","error","rpc","console","log","isToday","date","today","Date","getDate","getMonth","getFullYear","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","convocatoria","index","convocatoriaDate","fecha","username","toLocaleDateString","_c","$RefreshReg$"],"sources":["/Users/guillermoazcona/Desktop/yb-cb/src/pages/Proximamente.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { supabase } from '../supabaseClient';\nimport './Proximamente.css'; // Importar el archivo de estilos\n\nfunction Proximamente() {\n  const [convocatorias, setConvocatorias] = useState([]);\n\n  useEffect(() => {\n    async function fetchConvocatorias() {\n      // Llamada a la función SQL para obtener username y fecha\n      const { data: convocatoriasData, error } = await supabase.rpc('get_proximas_convocatorias1');\n\n      if (error) {\n        console.log('Error obteniendo convocatorias:', error);\n        return;\n      }\n\n      setConvocatorias(convocatoriasData); // Guardamos los resultados en el estado\n    }\n\n    fetchConvocatorias();\n  }, []);\n\n  const isToday = (date) => {\n    const today = new Date();\n    return (\n      date.getDate() === today.getDate() &&\n      date.getMonth() === today.getMonth() &&\n      date.getFullYear() === today.getFullYear()\n    );\n  };\n\n  return (\n    <div className=\"container\">\n      <h2>Próximas Convocatorias</h2>\n      <ul>\n        {convocatorias.length === 0 ? (\n          <p className=\"no-convocatorias\">No hay convocatorias próximas</p>\n        ) : (\n          convocatorias.map((convocatoria, index) => {\n            const convocatoriaDate = new Date(convocatoria.fecha);\n\n            return (\n              <li key={index}>\n                {isToday(convocatoriaDate) ? (\n                  <p>{convocatoria.username} cocina hoy</p>  // Si es hoy\n                ) : convocatoriaDate >= new Date() ? (\n                  <p>{convocatoria.username} cocinará el {convocatoriaDate.toLocaleDateString()}</p>  // Si es una fecha futura\n                ) : (\n                  <p>{convocatoria.username} no tiene fecha, pero que se vaya preparando</p>  // Si es una fecha pasada\n                )}\n              </li>\n            );\n          })\n        )}\n      </ul>\n    </div>\n  );\n}\n\nexport default Proximamente;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}